syntax = "proto3";

import "paxos_master.proto";
import "paxos_slave.proto";
import "paxos_tablet.proto";

package proto.paxos;

// The values that appear in the Paxos log.
message PaxosLogEntry {
  oneof entry_content {
    proto.paxos.master.NewKeySpaceSelected key_space_selected = 1;
    proto.paxos.master.KeySpaceCommit key_space_commit = 2;
    proto.paxos.master.FirstConfigSelected first_config_selected = 3;
    proto.paxos.master.FirstConfigCommitted first_config_committed = 4;

    proto.paxos.slave.KeySpaceChanged key_space_changed = 5;
    proto.paxos.slave.Bootstrapped bootstrapped = 6;

    proto.paxos.tablet.Read read = 7;
    proto.paxos.tablet.Write write = 8;
  }
}

message Prepare {
  // Proposal number (aka "round").
  uint32 rnd = 1;
}

message Promise {
  // Proposal number the Promise is responding to.
  uint32 rnd = 1;
  // Proposal number of the last accepted value (not present if there was no
  // previously accepted value).
  uint32 vrnd = 2;
  // The last accepted value (not present if there was no previously
  // accepted value).
  PaxosLogEntry vval = 3;
}

message Accept {
  // Proposal number of the Accept message.
  uint32 vrnd = 1;
  // Value to accept.
  PaxosLogEntry vval = 2;
}

message Learn {
  // Proposal number of the Accepted message.
  uint32 vrnd = 1;
  // Value to accept.
  PaxosLogEntry vval = 2;
}

// Message containing all data related to Paxos. Recall that we are using MultiPaxos.
message PaxosMessage {
  uint32 paxos_index = 1; // The index of the Global Paxos Log the payload of this message is concerned with.
  oneof paxos_message {
    Prepare prepare = 2;
    Promise promise = 3;
    Accept accept = 4;
    Learn learn = 5;
  }
}
